---
const title = "AI Theme Color Playground";
const description = "Explore beautiful light and dark themes with custom color palettes";
import '../styles/theme.css';
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<div class="theme-container">
			<!-- Theme Toggle -->
			<div class="theme-toggle-section">
				<h1>{title}</h1>
				<p class="description">{description}</p>
				<div class="toggle-container">
					<label class="theme-toggle">
						<input type="checkbox" id="theme-toggle" />
						<span class="toggle-slider"></span>
						<span class="toggle-label">Dark Mode</span>
					</label>
				</div>
			</div>

			<!-- Color Palette Display -->
			<section class="color-palette-section">
				<h2>Color Palette</h2>
				<div class="color-grid">
					<div class="color-swatch" style="background: var(--bg); color: var(--text); border: 1px solid var(--text);">
						<span class="color-name">--bg</span>
						<span class="color-value">Background</span>
					</div>
					<div class="color-swatch" style="background: var(--surface); color: var(--text);">
						<span class="color-name">--surface</span>
						<span class="color-value">Surface</span>
					</div>
					<div class="color-swatch" style="background: var(--text); color: var(--bg);">
						<span class="color-name">--text</span>
						<span class="color-value">Text</span>
					</div>
					<div class="color-swatch" style="background: var(--primary); color: var(--bg);">
						<span class="color-name">--primary</span>
						<span class="color-value">Primary</span>
					</div>
					<div class="color-swatch" style="background: var(--secondary); color: var(--bg);" data-color="secondary">
						<span class="color-name">--secondary</span>
						<span class="color-value">Secondary</span>
					</div>
					<div class="color-swatch" style="background: var(--success); color: var(--bg);" data-color="success">
						<span class="color-name">--success</span>
						<span class="color-value">Success</span>
					</div>
					<div class="color-swatch" style="background: var(--danger); color: var(--bg);" data-color="danger">
						<span class="color-name">--danger</span>
						<span class="color-value">Danger</span>
					</div>
					<div class="color-swatch" style="background: var(--warning); color: var(--text);" data-color="warning">
						<span class="color-name">--warning</span>
						<span class="color-value">Warning</span>
					</div>
					<div class="color-swatch" style="background: var(--info); color: var(--bg);">
						<span class="color-name">--info</span>
						<span class="color-value">Info</span>
					</div>
					<div class="color-swatch" style="background: var(--light); color: var(--text);">
						<span class="color-name">--light</span>
						<span class="color-value">Light</span>
					</div>
					<div class="color-swatch" style="background: var(--dark); color: var(--bg);">
						<span class="color-name">--dark</span>
						<span class="color-value">Dark</span>
					</div>
				</div>
			</section>

			<!-- Component Examples -->
			<section class="component-examples">
				<h2>Component Examples</h2>
				
				<div class="example-card" style="background: var(--surface); color: var(--text); padding: var(--space-lg); border-radius: var(--radius-lg); margin-bottom: var(--space-lg); border: 2px solid transparent; transition: border-color 0.3s ease;">
					<h3 style="color: var(--primary);">Interactive Buttons</h3>
					<p>These buttons demonstrate the different color variants available in both themes.</p>
					
					<div class="button-group" style="margin-top: var(--space-md); display: flex; gap: var(--space-sm); flex-wrap: wrap;">
						<button style="background: var(--primary); color: var(--bg); border: none; padding: var(--space-sm) var(--space-md); border-radius: var(--radius-sm); cursor: pointer;">Primary</button>
						<button style="background: var(--secondary); color: var(--bg);" data-color="secondary" class="btn-secondary">Secondary</button>
						<button style="background: var(--success); color: var(--bg);" data-color="success" class="btn-success">Success</button>
						<button style="background: var(--danger); color: var(--bg);" data-color="danger" class="btn-danger">Danger</button>
						<button style="background: var(--warning); color: var(--text);" data-color="warning" class="btn-warning">Warning</button>
						<button style="background: var(--info); color: var(--bg);" data-color="info" class="btn-info">Info</button>
					</div>
				</div>

				<div class="example-card" style="background: var(--bg); color: var(--text); padding: var(--space-lg); border: 2px solid var(--surface); border-radius: var(--radius-lg); transition: border-color 0.3s ease; margin-bottom: var(--space-lg);">
					<h3 style="color: var(--primary);">Typography Examples</h3>
					<p style="color: var(--text);">Regular text using the main text color for body content.</p>
					<p style="color: var(--primary);">Primary colored text for important highlights and links.</p>
					<p style="color: var(--success);">Success messages for positive feedback and confirmations.</p>
					<p style="color: var(--danger);">Error or danger messages for warnings and critical alerts.</p>
					<p style="color: var(--warning);">Warning messages for cautionary information.</p>
					<p style="color: var(--info);">Informational messages for helpful tips and details.</p>
				</div>

				<div class="example-card" style="background: var(--surface); color: var(--text); padding: var(--space-lg); border-radius: var(--radius-lg); border: 2px solid transparent; transition: border-color 0.3s ease;">
					<h3 style="color: var(--primary);">Form Elements</h3>
					<p>Form inputs that adapt to the current theme automatically.</p>
					
					<div style="display: grid; gap: var(--space-md); max-width: 400px; margin-top: var(--space-md);">
						<input type="text" placeholder="Enter your name" style="padding: var(--space-sm); border: 1px solid var(--surface); border-radius: var(--radius-sm); background: var(--bg); color: var(--text);">
						<select style="padding: var(--space-sm); border: 1px solid var(--surface); border-radius: var(--radius-sm); background: var(--bg); color: var(--text);">
							<option>Choose an option</option>
							<option>Light Theme</option>
							<option>Dark Theme</option>
							<option>Auto Theme</option>
						</select>
						<textarea placeholder="Enter your feedback" rows="4" style="padding: var(--space-sm); border: 1px solid var(--surface); border-radius: var(--radius-sm); background: var(--bg); color: var(--text); resize: vertical;"></textarea>
						<button style="background: var(--primary); color: var(--bg); border: none; padding: var(--space-sm) var(--space-md); border-radius: var(--radius-sm); cursor: pointer;">Submit Form</button>
					</div>
				</div>
			</section>

			<!-- Instructions -->
			<section class="instructions-section" style="background: var(--bg); color: var(--text); padding: var(--space-lg); border: 2px solid var(--primary); border-radius: var(--radius-lg); text-align: center;">
				<h2 style="color: var(--primary);">How to Use</h2>
				<p>Toggle between light and dark themes using the switch above, or press <kbd style="background: var(--surface); padding: 0.25rem 0.5rem; border-radius: var(--radius-sm); font-family: monospace;">Ctrl+T</kbd> for quick switching.</p>
				<p>Watch how all colors, components, and text automatically adapt to provide optimal contrast and readability.</p>
			</section>
		</div>
	</body>
</html>

<style>
	.theme-container {
		max-width: 800px;
		margin: 0 auto;
		padding: var(--space-lg);
		background: var(--bg);
		color: var(--text);
		min-height: 100vh;
	}

	.theme-toggle-section {
		text-align: center;
		margin-bottom: var(--space-2xl);
	}

	.theme-toggle-section h1 {
		color: var(--primary);
		margin-bottom: var(--space-md);
		font-size: 2.5rem;
	}

	.description {
		font-size: 1.125rem;
		opacity: 0.8;
		margin-bottom: var(--space-lg);
	}

	.toggle-container {
		display: flex;
		justify-content: center;
		align-items: center;
		gap: var(--space-md);
	}

	.theme-toggle {
		display: flex;
		align-items: center;
		gap: var(--space-sm);
		cursor: pointer;
		user-select: none;
	}

	.theme-toggle input {
		display: none;
	}

	.toggle-slider {
		position: relative;
		width: 50px;
		height: 24px;
		background: var(--surface);
		border-radius: 24px;
		transition: all 0.3s ease;
		border: 2px solid var(--primary);
	}

	.toggle-slider::before {
		content: '';
		position: absolute;
		top: 2px;
		left: 2px;
		width: 16px;
		height: 16px;
		background: var(--primary);
		border-radius: 50%;
		transition: all 0.3s ease;
	}

	.theme-toggle input:checked + .toggle-slider {
		background: var(--primary);
	}

	.theme-toggle input:checked + .toggle-slider::before {
		transform: translateX(26px);
		background: var(--bg);
	}

	.toggle-label {
		font-weight: 500;
		color: var(--text);
	}

	.color-palette-section {
		margin-bottom: var(--space-2xl);
	}

	.color-palette-section h2 {
		color: var(--primary);
		margin-bottom: var(--space-lg);
	}

	.color-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
		gap: var(--space-md);
		margin-bottom: var(--space-xl);
	}

	.color-swatch {
		height: 100px;
		border-radius: var(--radius-md);
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		text-align: center;
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
		transition: transform 0.2s ease;
	}

	.color-swatch:hover {
		transform: translateY(-2px);
	}

	.color-name {
		font-weight: 600;
		font-size: var(--text-sm);
		margin-bottom: var(--space-xs);
	}

	.color-value {
		font-size: var(--text-xs);
		opacity: 0.8;
	}

	.component-examples {
		margin-bottom: var(--space-2xl);
	}

	.component-examples h2 {
		color: var(--primary);
		margin-bottom: var(--space-lg);
	}

	.example-card:hover {
		border-color: var(--primary) !important;
		cursor: pointer;
	}

	.instructions-section {
		margin-bottom: var(--space-xl);
	}

	/* Dark theme specific color adjustments for better contrast */
	[data-theme="dark"] .color-swatch[data-color="secondary"],
	[data-theme="dark"] .btn-secondary {
		background: var(--secondary) !important;
		color: var(--bg) !important;
	}

	[data-theme="dark"] .color-swatch[data-color="success"],
	[data-theme="dark"] .btn-success {
		background: var(--success) !important;
		color: var(--bg) !important;
	}

	[data-theme="dark"] .color-swatch[data-color="warning"],
	[data-theme="dark"] .btn-warning {
		background: var(--warning) !important;
		color: var(--bg) !important;
	}

	[data-theme="dark"] .color-swatch[data-color="danger"],
	[data-theme="dark"] .btn-danger {
		background: var(--danger) !important;
		color: var(--bg) !important;
	}

	/* Button base styles */
	.btn-secondary,
	.btn-success,
	.btn-danger,
	.btn-warning,
	.btn-info {
		border: none;
		padding: var(--space-sm) var(--space-md);
		border-radius: var(--radius-sm);
		cursor: pointer;
		transition: all 0.2s ease;
	}

	@media (max-width: 768px) {
		.theme-container {
			padding: var(--space-md);
		}

		.color-grid {
			grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
		}

		.toggle-container {
			flex-direction: column;
		}

		.theme-toggle-section h1 {
			font-size: 2rem;
		}
	}
</style>

<script>
	// Theme toggle functionality - ensure DOM is loaded
	document.addEventListener('DOMContentLoaded', function() {
		const themeToggle = document.getElementById('theme-toggle');
		const html = document.documentElement;

		// Check for saved theme preference or default to light mode
		const currentTheme = localStorage.getItem('theme') || 'light';
		
		console.log('Current theme:', currentTheme);
		console.log('Theme toggle element:', themeToggle);
		
		// Set initial theme
		html.setAttribute('data-theme', currentTheme);
		html.classList.remove('theme-light', 'theme-dark');
		html.classList.add(`theme-${currentTheme}`);
		
		if (themeToggle && themeToggle instanceof HTMLInputElement) {
			themeToggle.checked = currentTheme === 'dark';

			// Toggle theme on checkbox change
			themeToggle.addEventListener('change', function() {
				const newTheme = themeToggle.checked ? 'dark' : 'light';
				console.log('Switching to theme:', newTheme);
				html.setAttribute('data-theme', newTheme);
				html.classList.remove('theme-light', 'theme-dark');
				html.classList.add(`theme-${newTheme}`);
				localStorage.setItem('theme', newTheme);
			});
		}

		// Listen for keyboard shortcuts
		document.addEventListener('keydown', (e) => {
			if (e.ctrlKey && e.key.toLowerCase() === 't') {
				e.preventDefault();
				console.log('Keyboard shortcut triggered');
				if (themeToggle instanceof HTMLInputElement) {
					themeToggle.checked = !themeToggle.checked;
					themeToggle.dispatchEvent(new Event('change'));
				}
			}
		});

		// Listen for system theme changes
		window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
			if (!localStorage.getItem('theme')) {
				const systemTheme = e.matches ? 'dark' : 'light';
				html.setAttribute('data-theme', systemTheme);
				html.classList.remove('theme-light', 'theme-dark');
				html.classList.add(`theme-${systemTheme}`);
				if (themeToggle instanceof HTMLInputElement) {
					themeToggle.checked = systemTheme === 'dark';
				}
			}
		});
	});
</script>
